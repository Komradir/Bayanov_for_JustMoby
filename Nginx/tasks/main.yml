---
# tasks file for Nginx
 - name: update rep      #имя задания которое мы даем ansible
   apt:                  #вызов установленного в ansuble модуля, в данном случае для управления пакетами
      update_cache: yes  #параметр модуял, который выбран выше

 - name: Upgrade OC #обновление всех имеющихся пакетов
   apt:
     upgrade: yes

 - name: remove pak that may cause harm #удаление всех пакетов которые могут помешать корректной настройке других пакетов, список берется из переменной (подробнее в vars) 
   ansible.builtin.apt:                 #т.к модуль apt не может удалять пакеты, нам он не подходит, этот имеет нужный функионал
     name: "{{pak_to_remove}}"
     state: absent                      #параметр говорит, что пакет должен отсутствовать


 - name: install main web paks #установке основных пакетов, для работы веб сервера
   apt:
     pkg: "{{webpak}}"
     state: present #параметр говорит, что пакет должен быть "стабильной" версии

 - name: install certbot #!!!!!! Плагин python3-certbot-nginx их ТЗ именно с таким наваним не нашел. В документации certbot дается на выбор 2 варианта: 1) установить зависимотси и плагины отдельно; 2) скачать пак менеджер snap и установить в 
                         #одну команду со со всем необходимым. Т.к 1 варинт подразумевает исп. нескольких команд, успешное выполнение которых не отслеживается ansible, я выбрал 2. Не смотря на то что на ОС появятся "мусорные" данные. 
   community.general.snap:
     name: certbot #при использовании параметра classic возможно добавление в task лишь одного пакета, следловательно, переменная сдесь не имеет смысла.
     classic: true #пар. гов. что пакет должен иметь обычный уровень доступа к системе, его использование рекомендовоно в документации certbot

 - name: create directory for site files #создание директории для файлов сайта, имя из переменной
   ansible.builtin.file:
     path: /var/www/{{domain_name}} #в данном случае переменная указывается не в "" т.к. она является частью ссылки
     state: directory
     mode: 0775

 - name: replace the nginx config #замена дефолтного файла конфигурации nginx на заранее подготовленный
   ansible.builtin.template:      #template в ansible позволяют вставить в файл нужные значения вместо переменных, перед заменой на хосте. Значения переменных можно задавать как в vars, так и инвентаризационном файле и плейбуке 
     src: /root/ansible/Nginx/templates/nginx_conf.j2 #преднастроенный файл который мы отправим на хост, с заменой
     dest: /etc/nginx/nginx.conf #файл который будет создан на хосте, в данной случае заменён на хосте. Параметр force (заменить, если сущесвует), по умолчанию = true, так что указывать его не обязательно.

 - name: replace the nginx sites-available #замена файла натсроек сайта
   ansible.builtin.template:
     src: /root/ansible/Nginx/templates/site_av.j2
     dest: /etc/nginx/sites-available/default

 - name: cetrbot cert registration #регистрация сертификата letsencrypt, с пом. cert bot
   ansible.builtin.shell: certbot certonly --nginx -m {{mail}} --register --agree-tos -d {{domain_name}} -w /var/www/{{domain_name}} #модуль посылет команду в интерпритатор хотса. Минимальный набор параметров для того что-
#бы certbot не задавал вопрос и всё прошло автоматически.
   args: #параметр который задает аргументы модуля
     chdir: / #варгумент модуля, в отличии от параметров, как правило, указывает какой-то путь, число или ещё что-то "произвольное". В параметрах свой, точный набор значений, указанный в докунтации.

 - name: pause for nginx sert register # предидущий task просто посылает команду, он сличается выполненным сразу полсе отправки. Ansible не в курке о том получены сертификаты или нет. Это задание просто задает ожидае в одну минуту.
   ansible.builtin.pause:
     minutes: 1

 - name: reboot OS #перезагрузка ОС, для того, что бы применились все изменнения. 
   ansible.builtin.reboot:

